var app=function(){"use strict";function n(){}function t(n){return n()}function s(){return Object.create(null)}function a(n){n.forEach(t)}function e(n){return"function"==typeof n}function o(n,t){return n!=n?t==t:n!==t||n&&"object"==typeof n||"function"==typeof n}function p(n,t){n.appendChild(t)}function c(n){n.parentNode.removeChild(n)}function l(n){return document.createElement(n)}function u(n){return document.createTextNode(n)}function i(){return u(" ")}function r(n,t,s,a){return n.addEventListener(t,s,a),()=>n.removeEventListener(t,s,a)}function k(n,t,s){null==s?n.removeAttribute(t):n.getAttribute(t)!==s&&n.setAttribute(t,s)}function d(n,t){t=""+t,n.wholeText!==t&&(n.data=t)}let h;function m(n){h=n}function g(){if(!h)throw new Error("Function called outside component initialization");return h}function f(){const n=g();return(t,s)=>{const a=n.$$.callbacks[t];if(a){const e=function(n,t){const s=document.createEvent("CustomEvent");return s.initCustomEvent(n,!1,!1,t),s}(t,s);a.slice().forEach((t=>{t.call(n,e)}))}}}const y=[],$=[],v=[],b=[],T=Promise.resolve();let w=!1;function x(n){v.push(n)}function M(n){b.push(n)}let S=!1;const L=new Set;function C(){if(!S){S=!0;do{for(let n=0;n<y.length;n+=1){const t=y[n];m(t),H(t.$$)}for(m(null),y.length=0;$.length;)$.pop()();for(let n=0;n<v.length;n+=1){const t=v[n];L.has(t)||(L.add(t),t())}v.length=0}while(y.length);for(;b.length;)b.pop()();w=!1,S=!1,L.clear()}}function H(n){if(null!==n.fragment){n.update(),a(n.before_update);const t=n.dirty;n.dirty=[-1],n.fragment&&n.fragment.p(n.ctx,t),n.after_update.forEach(x)}}const _=new Set;function q(n,t){n&&n.i&&(_.delete(n),n.i(t))}function j(n,t,s,a){if(n&&n.o){if(_.has(n))return;_.add(n),undefined.c.push((()=>{_.delete(n),a&&(s&&n.d(1),a())})),n.o(t)}}function E(n,t,s){const a=n.$$.props[t];void 0!==a&&(n.$$.bound[a]=s,s(n.$$.ctx[a]))}function I(n){n&&n.c()}function A(n,s,o){const{fragment:p,on_mount:c,on_destroy:l,after_update:u}=n.$$;p&&p.m(s,o),x((()=>{const s=c.map(t).filter(e);l?l.push(...s):a(s),n.$$.on_mount=[]})),u.forEach(x)}function N(n,t){const s=n.$$;null!==s.fragment&&(a(s.on_destroy),s.fragment&&s.fragment.d(t),s.on_destroy=s.fragment=null,s.ctx=[])}function P(n,t){-1===n.$$.dirty[0]&&(y.push(n),w||(w=!0,T.then(C)),n.$$.dirty.fill(0)),n.$$.dirty[t/31|0]|=1<<t%31}function D(t,e,o,p,l,u,i=[-1]){const r=h;m(t);const k=e.props||{},d=t.$$={fragment:null,ctx:null,props:u,update:n,not_equal:l,bound:s(),on_mount:[],on_destroy:[],before_update:[],after_update:[],context:new Map(r?r.$$.context:[]),callbacks:s(),dirty:i,skip_bound:!1};let g=!1;if(d.ctx=o?o(t,k,((n,s,...a)=>{const e=a.length?a[0]:s;return d.ctx&&l(d.ctx[n],d.ctx[n]=e)&&(!d.skip_bound&&d.bound[n]&&d.bound[n](e),g&&P(t,n)),s})):[],d.update(),g=!0,a(d.before_update),d.fragment=!!p&&p(d.ctx),e.target){if(e.hydrate){const n=function(n){return Array.from(n.childNodes)}(e.target);d.fragment&&d.fragment.l(n),n.forEach(c)}else d.fragment&&d.fragment.c();e.intro&&q(t.$$.fragment),A(t,e.target,e.anchor),C()}m(r)}class U{$destroy(){N(this,1),this.$destroy=n}$on(n,t){const s=this.$$.callbacks[n]||(this.$$.callbacks[n]=[]);return s.push(t),()=>{const n=s.indexOf(t);-1!==n&&s.splice(n,1)}}$set(n){var t;this.$$set&&(t=n,0!==Object.keys(t).length)&&(this.$$.skip_bound=!0,this.$$set(n),this.$$.skip_bound=!1)}}function O(n,t,s){let{theme:a=null}=t,{key:e="theme"}=t;const o=f(),p=()=>matchMedia("(prefers-color-scheme: dark)").matches+"";var c;return c=()=>{s(0,a=localStorage.getItem(e)),a&&!function(){const n=localStorage.getItem("system-theme"),t=p();return n!==t&&localStorage.setItem("system-theme",t),null!=n&&n!==t}()||s(0,a="true"===p()?"dark":"light")},g().$$.on_mount.push(c),function(n){g().$$.after_update.push(n)}((()=>{a&&(o("change",a),localStorage.setItem(e,a))})),n.$$set=n=>{"theme"in n&&s(0,a=n.theme),"key"in n&&s(1,e=n.key)},[a,e]}class W extends U{constructor(n){super(),D(this,n,O,null,o,{theme:0,key:1})}}function z(n){let t,s,e,o,h,m,g,f,y,v,b,T,w,x,S,L,C,H,_,P,D,U,O,z,B,R,G,F,V,J,K,Q,X,Y,Z,nn,tn,sn,an,en,on,pn,cn,ln,un,rn,kn,dn,hn,mn,gn,fn,yn,$n,vn,bn,Tn,wn,xn,Mn,Sn,Ln,Cn,Hn,_n,qn,jn,En,In,An,Nn,Pn,Dn,Un,On,Wn,zn,Bn,Rn,Gn,Fn,Vn,Jn,Kn=n[1].join(", ")+"";function Qn(t){n[3].call(null,t)}let Xn={};function Yn(t){n[6].call(null,t)}void 0!==n[0]&&(Xn.theme=n[0]),B=new W({props:Xn}),$.push((()=>E(B,"theme",Qn)));let Zn={};return void 0!==n[0]&&(Zn.theme=n[0]),An=new W({props:Zn}),$.push((()=>E(An,"theme",Yn))),An.$on("change",n[7]),{c(){t=l("main"),s=l("h1"),s.textContent="svelte-dark-mode",e=i(),o=l("p"),o.innerHTML='<a href="https://npmjs.com/package/svelte-dark-mode"><img src="https://img.shields.io/npm/v/svelte-dark-mode.svg?color=blue&amp;style=for-the-badge" alt="NPM"/></a> \n<a href="https://travis-ci.com/metonym/svelte-dark-mode"><img src="https://img.shields.io/travis/com/metonym/svelte-dark-mode?style=for-the-badge" alt="Build"/></a>',h=i(),m=l("blockquote"),m.innerHTML="<p>Support dark mode in your Svelte apps.</p>",g=i(),f=l("p"),f.innerHTML='This component sets the theme based on the user’s preferred color scheme using <a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia">window.matchMedia</a>.',y=i(),v=l("p"),v.innerHTML='The preferred theme is persisted locally with the <a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage">window.localStorage API</a>.',b=i(),T=l("p"),T.innerHTML='This component ships with <a href="https://github.com/metonym/svelte-dark-mode/tree/master/types">TypeScript definitions</a>.',w=i(),x=l("h2"),x.textContent="Install",S=i(),L=l("pre"),C=i(),H=l("h2"),H.textContent="Usage",_=i(),P=l("p"),P.innerHTML="The initial <code>theme</code> is set to either <code>&quot;dark&quot;</code> or <code>&quot;light&quot;</code> based on the user’s system preference.",D=i(),U=l("div"),O=l("style"),O.textContent=":global(.dark) {\n    background: #032f62;\n    color: #f1f8ff;\n  }",z=i(),I(B.$$.fragment),G=i(),F=l("h1"),V=u("This is "),J=u(n[0]),K=u(" mode."),Q=i(),X=l("p"),X.textContent="Change the theme and reload the page. The theme should be persisted.",Y=i(),Z=l("button"),nn=u("Switch to "),tn=u(n[2]),sn=u(" mode\n"),an=l("pre"),en=i(),on=l("h3"),on.textContent="Server-side rendering (SSR)",pn=i(),cn=l("p"),cn.innerHTML="If your app uses server-side rendering (SSR), you may need to employ the <code>afterUpdate</code> lifecycle hook because <code>document</code> is a client-side API.",ln=i(),un=l("pre"),rn=i(),kn=l("h3"),kn.textContent="System preference change",dn=i(),hn=l("p"),hn.textContent="If the user changes their color scheme preference at the system level, the theme will be updated when the page is reloaded.",mn=i(),gn=l("h3"),gn.innerHTML="Custom <code>localStorage</code> key",fn=i(),yn=l("p"),yn.innerHTML="By default, this component uses <code>&quot;theme&quot;</code> as the key to persist the theme. Supply your own local storage key using the <code>&quot;key&quot;</code> prop.",$n=i(),vn=l("pre"),bn=i(),Tn=l("pre"),wn=i(),xn=l("h2"),xn.textContent="API",Mn=i(),Sn=l("table"),Sn.innerHTML='<thead><tr><th style="text-align:left">Prop name</th> \n<th style="text-align:left">Value</th></tr></thead> \n<tbody><tr><td style="text-align:left">theme</td> \n<td style="text-align:left"><code>&quot;dark&quot;</code> or <code>&quot;light&quot;</code> (default: <code>null</code>)</td></tr> \n<tr><td style="text-align:left">key</td> \n<td style="text-align:left"><code>string</code> (default: <code>&quot;theme&quot;</code>)</td></tr></tbody>',Ln=i(),Cn=l("h3"),Cn.textContent="Dispatched events",Hn=i(),_n=l("p"),_n.innerHTML="This component dispatches a <code>&quot;change&quot;</code> event when the theme is updated.",qn=i(),jn=l("div"),En=l("button"),En.textContent="Toggle theme",In=i(),I(An.$$.fragment),Pn=i(),Dn=u(Kn),Un=l("pre"),On=i(),Wn=l("h2"),Wn.innerHTML='<a href="https://github.com/metonym/svelte-dark-mode/tree/master/CHANGELOG.md">Changelog</a>',zn=i(),Bn=l("h2"),Bn.textContent="License",Rn=i(),Gn=l("p"),Gn.innerHTML='<a href="https://github.com/metonym/svelte-dark-mode/tree/master/LICENSE">MIT</a>',k(L,"class","language-bash"),k(Z,"type","button"),k(U,"class","code-fence"),k(an,"class","language-svelte"),k(an,"data-svelte",""),k(un,"class","language-html"),k(vn,"class","language-html"),k(Tn,"class","language-javascript"),k(En,"type","button"),k(jn,"class","code-fence"),k(Un,"class","language-svelte"),k(Un,"data-svelte",""),k(t,"class","markdown-body")},m(a,c){!function(n,t,s){n.insertBefore(t,s||null)}(a,t,c),p(t,s),p(t,e),p(t,o),p(t,h),p(t,m),p(t,g),p(t,f),p(t,y),p(t,v),p(t,b),p(t,T),p(t,w),p(t,x),p(t,S),p(t,L),L.innerHTML='<span class="token function">yarn</span> <span class="token function">add</span> -D svelte-dark-mode\n<span class="token comment"># OR</span>\n<span class="token function">npm</span> i -D svelte-dark-mode\n',p(t,C),p(t,H),p(t,_),p(t,P),p(t,D),p(t,U),p(U,O),p(U,z),A(B,U,null),p(U,G),p(U,F),p(F,V),p(F,J),p(F,K),p(U,Q),p(U,X),p(U,Y),p(U,Z),p(Z,nn),p(Z,tn),p(Z,sn),p(t,an),an.innerHTML='<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n  <span class="token keyword">import</span> DarkMode <span class="token keyword">from</span> <span class="token string">"svelte-dark-mode"</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">let</span> theme<span class="token punctuation">;</span>\n\n  $<span class="token operator">:</span> switchTheme <span class="token operator">=</span> theme <span class="token operator">===</span> <span class="token string">"dark"</span> <span class="token operator">?</span> <span class="token string">"light"</span> <span class="token operator">:</span> <span class="token string">"dark"</span><span class="token punctuation">;</span>\n  $<span class="token operator">:</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>className <span class="token operator">=</span> theme<span class="token punctuation">;</span> <span class="token comment">// "dark" or "light"</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">\n  <span class="token selector">:global(.dark)</span> <span class="token punctuation">{</span>\n    <span class="token property">background</span><span class="token punctuation">:</span> #032f62<span class="token punctuation">;</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> #f1f8ff<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DarkMode</span> <span class="token attr-name"><span class="token namespace">bind:</span>theme</span> <span class="token punctuation">/></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>This is <span class="token language-javascript"><span class="token punctuation">{</span>theme<span class="token punctuation">}</span></span> mode.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Change the theme and reload the page. The theme should be persisted.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span>\n  <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span>\n  <span class="token attr-name"><span class="token namespace">on:</span>click=</span><span class="token language-javascript"><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    theme <span class="token operator">=</span> switchTheme<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n<span class="token punctuation">></span></span>\n  Switch to\n  <span class="token language-javascript"><span class="token punctuation">{</span>switchTheme<span class="token punctuation">}</span></span>\n  mode\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n',p(t,en),p(t,on),p(t,pn),p(t,cn),p(t,ln),p(t,un),un.innerHTML='<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n  <span class="token keyword">import</span> <span class="token punctuation">{</span> afterUpdate <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"svelte"</span><span class="token punctuation">;</span>\n\n  <span class="token function">afterUpdate</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>className <span class="token operator">=</span> theme<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n',p(t,rn),p(t,kn),p(t,dn),p(t,hn),p(t,mn),p(t,gn),p(t,fn),p(t,yn),p(t,$n),p(t,vn),vn.innerHTML='<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DarkMode</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>custom-theme-key<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n',p(t,bn),p(t,Tn),Tn.innerHTML='localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">"custom-theme-key"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// "dark" || "light"</span>\n',p(t,wn),p(t,xn),p(t,Mn),p(t,Sn),p(t,Ln),p(t,Cn),p(t,Hn),p(t,_n),p(t,qn),p(t,jn),p(jn,En),p(jn,In),A(An,jn,null),p(jn,Pn),p(jn,Dn),p(t,Un),Un.innerHTML='<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n  <span class="token keyword">let</span> events <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span>\n  <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span>\n  <span class="token attr-name"><span class="token namespace">on:</span>click=</span><span class="token language-javascript"><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    theme <span class="token operator">=</span> switchTheme<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n<span class="token punctuation">></span></span>\n  Toggle theme\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DarkMode</span>\n  <span class="token attr-name"><span class="token namespace">bind:</span>theme</span>\n  <span class="token attr-name"><span class="token namespace">on:</span>change=</span><span class="token language-javascript"><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    events <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>events<span class="token punctuation">,</span> e<span class="token punctuation">.</span>detail<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>detail<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// "dark" | "light"</span>\n  <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n<span class="token punctuation">/></span></span>\n\n<span class="token language-javascript"><span class="token punctuation">{</span>events<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">\', \'</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n',p(t,On),p(t,Wn),p(t,zn),p(t,Bn),p(t,Rn),p(t,Gn),Fn=!0,Vn||(Jn=[r(Z,"click",n[4]),r(En,"click",n[5])],Vn=!0)},p(n,[t]){const s={};!R&&1&t&&(R=!0,s.theme=n[0],M((()=>R=!1))),B.$set(s),(!Fn||1&t)&&d(J,n[0]),(!Fn||4&t)&&d(tn,n[2]);const a={};!Nn&&1&t&&(Nn=!0,a.theme=n[0],M((()=>Nn=!1))),An.$set(a),(!Fn||2&t)&&Kn!==(Kn=n[1].join(", ")+"")&&d(Dn,Kn)},i(n){Fn||(q(B.$$.fragment,n),q(An.$$.fragment,n),Fn=!0)},o(n){j(B.$$.fragment,n),j(An.$$.fragment,n),Fn=!1},d(n){n&&c(t),N(B),N(An),Vn=!1,a(Jn)}}}function B(n,t,s){let a,e=[];let o;return n.$$.update=()=>{1&n.$$.dirty&&s(2,o="dark"===a?"light":"dark"),1&n.$$.dirty&&(document.body.className=a)},[a,e,o,function(n){a=n,s(0,a)},()=>{s(0,a=o)},()=>{s(0,a=o)},function(n){a=n,s(0,a)},n=>{s(1,e=[...e,n.detail]),console.log(n.detail)}]}return new class extends U{constructor(n){super(),D(this,n,B,z,o,{})}}({target:document.body})}();
