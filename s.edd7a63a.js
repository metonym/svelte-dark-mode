var app=function(){"use strict";function n(){}function t(n){return n()}function s(){return Object.create(null)}function a(n){n.forEach(t)}function e(n){return"function"==typeof n}function o(n,t){return n!=n?t==t:n!==t}function p(n,t){n.appendChild(t)}function c(n){n.parentNode.removeChild(n)}function l(n){return document.createElement(n)}function r(n){return document.createTextNode(n)}function i(){return r(" ")}function u(n,t,s){null==s?n.removeAttribute(t):n.getAttribute(t)!==s&&n.setAttribute(t,s)}function d(n,t){t=""+t,n.wholeText!==t&&(n.data=t)}let k;function h(n){k=n}function g(){if(!k)throw new Error("Function called outside component initialization");return k}function m(){const n=g();return(t,s)=>{const a=n.$$.callbacks[t];if(a){const e=function(n,t,s=!1){const a=document.createEvent("CustomEvent");return a.initCustomEvent(n,s,!1,t),a}(t,s);a.slice().forEach((t=>{t.call(n,e)}))}}}const f=[],y=[],v=[],$=[],b=Promise.resolve();let T=!1;function M(n){v.push(n)}const L=new Set;let x=0;function w(){const n=k;do{for(;x<f.length;){const n=f[x];x++,h(n),H(n.$$)}for(h(null),f.length=0,x=0;y.length;)y.pop()();for(let n=0;n<v.length;n+=1){const t=v[n];L.has(t)||(L.add(t),t())}v.length=0}while(f.length);for(;$.length;)$.pop()();T=!1,L.clear(),h(n)}function H(n){if(null!==n.fragment){n.update(),a(n.before_update);const t=n.dirty;n.dirty=[-1],n.fragment&&n.fragment.p(n.ctx,t),n.after_update.forEach(M)}}const S=new Set;function C(n,t){n&&n.i&&(S.delete(n),n.i(t))}function _(n,s,o,p){const{fragment:c,on_mount:l,on_destroy:r,after_update:i}=n.$$;c&&c.m(s,o),p||M((()=>{const s=l.map(t).filter(e);r?r.push(...s):a(s),n.$$.on_mount=[]})),i.forEach(M)}function E(n,t){const s=n.$$;null!==s.fragment&&(a(s.on_destroy),s.fragment&&s.fragment.d(t),s.on_destroy=s.fragment=null,s.ctx=[])}function q(n,t){-1===n.$$.dirty[0]&&(f.push(n),T||(T=!0,b.then(w)),n.$$.dirty.fill(0)),n.$$.dirty[t/31|0]|=1<<t%31}function I(t,e,o,p,l,r,i,u=[-1]){const d=k;h(t);const g=t.$$={fragment:null,ctx:null,props:r,update:n,not_equal:l,bound:s(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(e.context||(d?d.$$.context:[])),callbacks:s(),dirty:u,skip_bound:!1,root:e.target||d.$$.root};i&&i(g.root);let m=!1;if(g.ctx=o?o(t,e.props||{},((n,s,...a)=>{const e=a.length?a[0]:s;return g.ctx&&l(g.ctx[n],g.ctx[n]=e)&&(!g.skip_bound&&g.bound[n]&&g.bound[n](e),m&&q(t,n)),s})):[],g.update(),m=!0,a(g.before_update),g.fragment=!!p&&p(g.ctx),e.target){if(e.hydrate){const n=function(n){return Array.from(n.childNodes)}(e.target);g.fragment&&g.fragment.l(n),n.forEach(c)}else g.fragment&&g.fragment.c();e.intro&&C(t.$$.fragment),_(t,e.target,e.anchor,e.customElement),w()}h(d)}class A{$destroy(){E(this,1),this.$destroy=n}$on(n,t){const s=this.$$.callbacks[n]||(this.$$.callbacks[n]=[]);return s.push(t),()=>{const n=s.indexOf(t);-1!==n&&s.splice(n,1)}}$set(n){var t;this.$$set&&(t=n,0!==Object.keys(t).length)&&(this.$$.skip_bound=!0,this.$$set(n),this.$$.skip_bound=!1)}}function N(n,t,s){let{theme:a="dark"}=t,{key:e="theme"}=t;const o={dark:"dark",light:"light"},p=m(),c=n=>n in o,l=n=>s(0,a=n.matches?o.dark:o.light);var r;return r=()=>{const n=matchMedia("(prefers-color-scheme: dark)"),t=localStorage.getItem(e);return c(t)?s(0,a=t):s(0,a=n.matches?o.dark:o.light),n.addEventListener("change",l),()=>n.removeEventListener("change",l)},g().$$.on_mount.push(r),function(n){g().$$.after_update.push(n)}((()=>{c(a)&&(p("change",a),localStorage.setItem(e,a))})),n.$$set=n=>{"theme"in n&&s(0,a=n.theme),"key"in n&&s(1,e=n.key)},[a,e]}var D=class extends A{constructor(n){super(),I(this,n,N,null,o,{theme:0,key:1})}};function j(n){let t,s,a,e,o,k,h,g,m,f,v,b,T,M,L,x,w,H,q,I,A,N,j,P,U,G,O,W,z,B,R,F,Y,J,K,Q,V,X,Z,nn,tn,sn,an,en,on,pn,cn,ln,rn,un,dn,kn,hn,gn,mn,fn,yn,vn,$n,bn,Tn,Mn,Ln,xn,wn,Hn,Sn,Cn,_n,En,qn,In,An,Nn,Dn,jn,Pn,Un,Gn,On,Wn,zn,Bn,Rn,Fn,Yn,Jn,Kn,Qn,Vn,Xn,Zn,nt,tt,st,at,et,ot,pt,ct,lt,rt,it,ut,dt,kt,ht,gt,mt;function ft(t){n[2](t)}let yt={};return void 0!==n[0]&&(yt.theme=n[0]),nn=new D({props:yt}),y.push((()=>function(n,t,s){const a=n.$$.props[t];void 0!==a&&(n.$$.bound[a]=s,s(n.$$.ctx[a]))}(nn,"theme",ft))),{c(){var p;t=l("main"),s=l("h1"),s.textContent="svelte-dark-mode",a=i(),e=l("p"),e.innerHTML='<a href="https://npmjs.com/package/svelte-dark-mode"><img src="https://img.shields.io/npm/v/svelte-dark-mode.svg?color=%23ff3e00&amp;style=for-the-badge" alt="NPM"/></a>',o=i(),k=l("blockquote"),k.innerHTML="<p>Support dark mode in your Svelte apps.</p>",h=i(),g=l("p"),g.innerHTML='<a href="https://github.com/metonym/svelte-dark-mode.git">GitHub repo</a>',m=i(),f=l("p"),f.innerHTML='This component sets the theme based on the user’s preferred color scheme using <a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia">window.matchMedia</a>.',v=i(),b=l("p"),b.innerHTML='The preferred theme is persisted using the <a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage">window.localStorage API</a>.',T=i(),M=l("hr"),L=i(),x=l("p"),x.innerHTML="<strong>Table of Contents</strong>",w=l("ul"),w.innerHTML='<li><a href="#installation">Installation</a></li> \n<li><a href="#usage">Usage</a></li> \n<ul><li><a href="#basic">Basic</a></li> \n<li><a href="#server-side-rendering-(ssr)">Server-side rendering (SSR)</a></li> \n<li><a href="#system-preference-change">System preference change</a></li> \n<li><a href="#custom-localstorage-key">Custom localStorage key</a></li> \n</ul><li><a href="#api">API</a></li> \n<ul><li><a href="#props">Props</a></li> \n<li><a href="#dispatched-events">Dispatched events</a></li> \n</ul><li><a href="#typescript">TypeScript</a></li> \n<li><a href="#changelog">Changelog</a></li> \n<li><a href="#license">License</a></li>',H=i(),q=l("h2"),q.textContent="Installation",I=i(),A=l("p"),A.innerHTML="<strong>Yarn</strong>",N=i(),j=l("pre"),P=i(),U=l("p"),U.innerHTML="<strong>NPM</strong>",G=i(),O=l("pre"),W=i(),z=l("p"),z.innerHTML="<strong>pnpm</strong>",B=i(),R=l("pre"),F=i(),Y=l("h2"),Y.textContent="Usage",J=i(),K=l("h3"),K.textContent="Basic",Q=i(),V=l("p"),V.innerHTML="The <code>theme</code> is set to either <code>&quot;dark&quot;</code> or <code>&quot;light&quot;</code> based on the user’s system preference.",X=i(),Z=l("div"),(p=nn.$$.fragment)&&p.c(),sn=i(),an=l("h1"),en=r("This is "),on=r(n[0]),pn=r(" mode."),cn=i(),ln=l("p"),ln.textContent="Change the theme and reload the page.",rn=i(),un=l("button"),dn=r("Switch to "),kn=r(n[1]),hn=r(" mode\n"),gn=l("pre"),mn=i(),fn=l("h3"),fn.textContent="Server-side rendering (SSR)",yn=i(),vn=l("p"),vn.innerHTML="When using server-side rendering (SSR), employ the <code>afterUpdate</code> lifecycle to access <code>document.body</code> or <code>document.documentElement</code>.",$n=i(),bn=l("pre"),Tn=i(),Mn=l("p"),Mn.innerHTML="An alternative to the <code>afterUpdate</code> lifecycle hook is to check if the type of <code>window</code> is undefined.",Ln=i(),xn=l("pre"),wn=i(),Hn=l("h3"),Hn.textContent="System preference change",Sn=i(),Cn=l("p"),Cn.textContent="The theme will automatically be updated if the user changes their color scheme preference at the system level.",_n=i(),En=l("h3"),En.innerHTML="Custom <code>localStorage</code> key",qn=i(),In=l("p"),In.innerHTML="Use the <code>key</code> prop to customize the local storage key used to track the persisted theme.",An=i(),Nn=l("p"),Nn.innerHTML="By default, the key is <code>&quot;theme&quot;</code>.",Dn=i(),jn=l("pre"),Pn=i(),Un=l("p"),Un.innerHTML="Use the <code>localStorage.getItem</code> API to programmatically access the stored value.",Gn=i(),On=l("pre"),Wn=i(),zn=l("h2"),zn.textContent="API",Bn=i(),Rn=l("h3"),Rn.textContent="Props",Fn=i(),Yn=l("table"),Yn.innerHTML='<thead><tr><th style="text-align:left">Name</th> \n<th style="text-align:left">Type</th> \n<th style="text-align:left">Default value</th></tr></thead> \n<tbody><tr><td style="text-align:left">theme</td> \n<td style="text-align:left"><code>&quot;dark&quot;</code> or <code>&quot;light&quot;</code></td> \n<td style="text-align:left"><code>&quot;dark&quot;</code></td></tr> \n<tr><td style="text-align:left">key</td> \n<td style="text-align:left"><code>string</code></td> \n<td style="text-align:left"><code>&quot;theme&quot;</code></td></tr></tbody>',Jn=i(),Kn=l("h3"),Kn.textContent="Dispatched events",Qn=i(),Vn=l("ul"),Vn.innerHTML="<li><strong>on:change</strong>: dispatched when <code>theme</code> is updated</li>",Xn=i(),Zn=l("pre"),nt=i(),tt=l("h2"),tt.textContent="TypeScript",st=i(),at=l("p"),at.innerHTML="<code>svelte</code> version 3.31 or greater is required to use this component with TypeScript.",et=i(),ot=l("p"),ot.innerHTML='TypeScript definitions are located in the <a href="https://github.com/metonym/svelte-dark-mode/tree/master/types">types folder</a>.',pt=i(),ct=l("h2"),ct.textContent="Changelog",lt=i(),rt=l("p"),rt.innerHTML='<a href="https://github.com/metonym/svelte-dark-mode/tree/master/CHANGELOG.md">CHANGELOG.md</a>',it=i(),ut=l("h2"),ut.textContent="License",dt=i(),kt=l("p"),kt.innerHTML='<a href="https://github.com/metonym/svelte-dark-mode/tree/master/LICENSE">MIT</a>',u(s,"id","svelte-dark-mode"),u(q,"id","installation"),u(j,"class","language-bash"),u(O,"class","language-bash"),u(R,"class","language-bash"),u(Y,"id","usage"),u(K,"id","basic"),u(Z,"class","code-fence"),u(gn,"class","language-svelte"),u(gn,"data-svelte",""),u(fn,"id","server-side-rendering-(ssr)"),u(bn,"class","language-svelte"),u(xn,"class","language-javascript"),u(Hn,"id","system-preference-change"),u(En,"id","custom-localstorage-key"),u(jn,"class","language-svelte"),u(On,"class","language-javascript"),u(zn,"id","api"),u(Rn,"id","props"),u(Kn,"id","dispatched-events"),u(Zn,"class","language-svelte"),u(tt,"id","typescript"),u(ct,"id","changelog"),u(ut,"id","license"),u(t,"class","markdown-body")},m(c,l){var r,i,u,d;!function(n,t,s){n.insertBefore(t,s||null)}(c,t,l),p(t,s),p(t,a),p(t,e),p(t,o),p(t,k),p(t,h),p(t,g),p(t,m),p(t,f),p(t,v),p(t,b),p(t,T),p(t,M),p(t,L),p(t,x),p(t,w),p(t,H),p(t,q),p(t,I),p(t,A),p(t,N),p(t,j),j.innerHTML='<span class="token function">yarn</span> <span class="token function">add</span> -D svelte-dark-mode\n',p(t,P),p(t,U),p(t,G),p(t,O),O.innerHTML='<span class="token function">npm</span> i -D svelte-dark-mode\n',p(t,W),p(t,z),p(t,B),p(t,R),R.innerHTML='<span class="token function">pnpm</span> i -D svelte-dark-mode\n',p(t,F),p(t,Y),p(t,J),p(t,K),p(t,Q),p(t,V),p(t,X),p(t,Z),_(nn,Z,null),p(Z,sn),p(Z,an),p(an,en),p(an,on),p(an,pn),p(Z,cn),p(Z,ln),p(Z,rn),p(Z,un),p(un,dn),p(un,kn),p(un,hn),p(t,gn),gn.innerHTML='<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n  <span class="token keyword">import</span> DarkMode <span class="token keyword">from</span> <span class="token string">"svelte-dark-mode"</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">let</span> theme<span class="token punctuation">;</span>\n\n  $<span class="token operator">:</span> switchTheme <span class="token operator">=</span> theme <span class="token operator">===</span> <span class="token string">"dark"</span> <span class="token operator">?</span> <span class="token string">"light"</span> <span class="token operator">:</span> <span class="token string">"dark"</span><span class="token punctuation">;</span>\n  $<span class="token operator">:</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>className <span class="token operator">=</span> theme<span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DarkMode</span> <span class="token attr-name"><span class="token namespace">bind:</span>theme</span> <span class="token punctuation">/></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>This is <span class="token language-javascript"><span class="token punctuation">{</span>theme<span class="token punctuation">}</span></span> mode.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Change the theme and reload the page.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">on:</span>click=</span><span class="token language-javascript"><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>theme <span class="token operator">=</span> switchTheme<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n  Switch to <span class="token language-javascript"><span class="token punctuation">{</span>switchTheme<span class="token punctuation">}</span></span> mode\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">\n  <span class="token selector">:global(.dark)</span> <span class="token punctuation">{</span>\n    <span class="token property">background</span><span class="token punctuation">:</span> #032f62<span class="token punctuation">;</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> #f1f8ff<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>\n',p(t,mn),p(t,fn),p(t,yn),p(t,vn),p(t,$n),p(t,bn),bn.innerHTML='<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n  <span class="token keyword">import</span> DarkMode <span class="token keyword">from</span> <span class="token string">"svelte-dark-mode"</span><span class="token punctuation">;</span>\n  <span class="token keyword">import</span> <span class="token punctuation">{</span> afterUpdate <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"svelte"</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">let</span> theme<span class="token punctuation">;</span>\n\n  <span class="token function">afterUpdate</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>className <span class="token operator">=</span> theme<span class="token punctuation">;</span> <span class="token comment">// "dark" or "light"</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DarkMode</span> <span class="token attr-name"><span class="token namespace">bind:</span>theme</span> <span class="token punctuation">/></span></span>\n',p(t,Tn),p(t,Mn),p(t,Ln),p(t,xn),xn.innerHTML='$<span class="token operator">:</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> window <span class="token operator">!==</span> <span class="token string">"undefined"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>className <span class="token operator">=</span> theme<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n',p(t,wn),p(t,Hn),p(t,Sn),p(t,Cn),p(t,_n),p(t,En),p(t,qn),p(t,In),p(t,An),p(t,Nn),p(t,Dn),p(t,jn),jn.innerHTML='<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DarkMode</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>custom-theme-key<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n',p(t,Pn),p(t,Un),p(t,Gn),p(t,On),On.innerHTML='localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">"custom-theme-key"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// "dark" || "light"</span>\n',p(t,Wn),p(t,zn),p(t,Bn),p(t,Rn),p(t,Fn),p(t,Yn),p(t,Jn),p(t,Kn),p(t,Qn),p(t,Vn),p(t,Xn),p(t,Zn),Zn.innerHTML='<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DarkMode</span>\n  <span class="token attr-name"><span class="token namespace">on:</span>change=</span><span class="token language-javascript"><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>detail<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// "dark" | "light"</span>\n  <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n<span class="token punctuation">/></span></span>\n',p(t,nt),p(t,tt),p(t,st),p(t,at),p(t,et),p(t,ot),p(t,pt),p(t,ct),p(t,lt),p(t,rt),p(t,it),p(t,ut),p(t,dt),p(t,kt),ht=!0,gt||(r=un,i="click",u=n[3],r.addEventListener(i,u,d),mt=()=>r.removeEventListener(i,u,d),gt=!0)},p(n,[t]){const s={};var a;!tn&&1&t&&(tn=!0,s.theme=n[0],a=()=>tn=!1,$.push(a)),nn.$set(s),(!ht||1&t)&&d(on,n[0]),(!ht||2&t)&&d(kn,n[1])},i(n){ht||(C(nn.$$.fragment,n),ht=!0)},o(n){!function(n,t,s,a){if(n&&n.o){if(S.has(n))return;S.add(n),(void 0).c.push((()=>{S.delete(n),a&&(s&&n.d(1),a())})),n.o(t)}}(nn.$$.fragment,n),ht=!1},d(n){n&&c(t),E(nn),gt=!1,mt()}}}function P(n,t,s){let a,e;return n.$$.update=()=>{1&n.$$.dirty&&s(1,a="dark"===e?"light":"dark"),1&n.$$.dirty&&(document.body.className=e)},[e,a,function(n){e=n,s(0,e)},()=>s(0,e=a)]}return new class extends A{constructor(n){super(),I(this,n,P,j,o,{})}}({target:document.body})}();
